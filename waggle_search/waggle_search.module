<?php

/**
 *  Implements hook_search_api_solr_query_alter().
 *
 *  Rewrite waggle's microsyntax (e.g., @user and #tag) for processing by Solr's dismax parser.
 */
function waggle_search_search_api_solr_query_alter(array &$call_args, SearchApiQueryInterface $query) {
  $waggle_search_string = isset($_GET['ws'])?$_GET['ws']:'';

  $sigil_fields = array(
    '#' => "sm_field_tags\\:name",
    '@' => "sm_field_associated_users\\:name",
  );

  $built_query = '';
  $nest_level = 0;
  $matches = array();

  if (preg_match_all("/\(|\)|\<AND\>|\<OR\>|(-)?(\w+:)?((.?\".*?\")|[^\s()]+)/", $waggle_search_string, $matches, PREG_SET_ORDER)) {
    foreach ($matches as $match_index => $match) {
      if ($match[0] === 'AND' || $match[0] === 'OR') {
        $built_query .= ' ' . $match[0] . ' ';
      } elseif ($match[0] === '(') {
        $built_query .= '(';
        $nest_level++;
      } elseif ($match[0] === ')') {
        if ($nest_level-- > 0)
          $built_query .= ')';
      } elseif (array_key_exists($match[3][0], $sigil_fields)) {
	$built_query .= $match[1] . $sigil_fields[$match[3][0]] . ':' . substr($match[3],1);
      } else {
	$built_query .= "((t_title:".$match[0].") OR (t_body\:value:".$match[0].") OR (t_search_api_viewed:".$match[0]."))";
      }
    }
    while ($nest_level-- > 0) {
      $built_query .= ')';
    }
  }

  //dpm($built_query);
  $call_args['params']['fq'][] = $built_query;
}

