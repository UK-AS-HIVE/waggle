<?php

/**
 * Implements hook_menu
 */
function waggle_users_menu(){
  $items['waggle/api/user-push'] = array(
    'page callback' => 'waggle_user_push',  
    //'type' => MENU_NORMAL_ITEM,
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );
  return $items;
}

function waggle_user_push(){
  if(substr($_SERVER['REMOTE_ADDR'], 0, 7) != '128.163') {
    watchdog('waggle', 'User push attempted from non-UK IP: ' . $_SERVER['REMOTE_ADDR'], WATCHDOG_ALERT);
    return;
  }
  $post = $_POST;
  $account = user_load_by_name($post['name']);
  if(!$account){
    if(empty($post['name'])){
      watchdog('waggle_users', 'Tried to save information for \'' . $post['name'] . '\', but no user with that login is in the system.');
      drupal_json_output(FALSE);
      return;
    }
    $account = drupal_anonymous_user();
    $account->name = $post['name'];
    $account->status = 1;
    unset($account->uid);
    unset($account->roles);
  }

  $edit = (array)$account;
  foreach(array('authorid', 'theme', 'timezone', 'language', 'data', 'ip', 'uid', 'pass', 'created', 'access', 'login', 'init', 'revision_timestamp', 'revision_uid') as $field)
    unset($edit[$field]);
    if(isset($post['picture'])){
      watchdog('waggle_users', $post['picture']);
      $file = file_save_data(file_get_contents(str_replace('https', 'http', $post['picture'])), 'public://' . array_pop(explode('/', $post['picture'])));
    if($file){
  watchdog('waggle', '<pre>' . print_r($file, 1) . print_r($edit, 1) . '</pre>');
      $image = image_load($file->uri);
      image_scale_and_crop($image, 100, 100);
      image_save($image);
      $edit['picture_upload'] = $file;
    }
  }
  
  if(isset($post['office']))
    $edit['field_office']['und'][0]['value'] = $post['office'];
  if(isset($post['phone']))
    $edit['field_phone']['und'][0]['value'] = $post['phone'];
  if(isset($post['mail']))
    $edit['field_mail']['und'][0]['value'] = $post['mail'];
  if(isset($post['affiliations'])){
    unset($edit['field_department']);
    foreach(explode('|', $post['affiliations']) as $dept)
    $edit['field_department']['und'][] = array('value' => $dept);
  }
  if(isset($post['first']))
    $edit['field_name']['und'][0]['first'] = $post['first'];
  if(isset($post['middle']))
    $edit['field_name']['und'][0]['middle'] = $post['middle'];
  if(isset($post['last']))
    $edit['field_name']['und'][0]['last'] = $post['last'];
  
  watchdog('waggle', '<pre>' . print_r($account, 1) . print_r($edit, 1) . '</pre>');
  $success = user_save($account, $edit);

  // Force sync to LDAP.
  $ldap_user_conf = ldap_user_conf();
  if ($ldap_user_conf->synchToDrupalAccount($account, $user_edit = array(), LDAP_USER_EVENT_SYNCH_TO_DRUPAL_USER, NULL, TRUE) === FALSE) {
    watchdog('waggle', 'Failed to sync newly pushed user with LDAP');
  }

  drupal_json_output($account);
}